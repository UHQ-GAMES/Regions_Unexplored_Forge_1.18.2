package net.regions_unexplored.data.worldgen.placement;

import java.util.List;
import net.minecraft.core.Direction;
import net.minecraft.core.Holder;
import net.minecraft.data.worldgen.features.VegetationFeatures;
import net.minecraft.data.worldgen.placement.PlacementUtils;
import net.minecraft.resources.ResourceKey;
import net.minecraft.util.valueproviders.ConstantInt;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
import net.minecraft.world.level.levelgen.placement.*;
import net.regions_unexplored.block.RegionsUnexploredBlocks;
import net.regions_unexplored.data.worldgen.features.RuTreeFeatures;
import net.regions_unexplored.data.worldgen.features.RuVegetationFeatures;

public class RuVegetationPlacements {
    private static final PlacementModifier TREE_THRESHOLD = SurfaceWaterDepthFilter.forMaxDepth(0);
    //1.19.4 stuff//1.19.4 stuff
    public static final Holder<PlacedFeature> WATER_CATTAIL = PlacementUtils.register("regions_unexplored:water_cattail", RuVegetationFeatures.WATER_CATTAIL, CountPlacement.of(10), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BiomeFilter.biome());
    //TALL_SAPLINGS//TALL_SAPLINGS
    public static final Holder<PlacedFeature> TALL_ACACIA_SAPLING = PlacementUtils.register("regions_unexplored:tall_acacia_sapling", RuVegetationFeatures.TALL_ACACIA_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BAOBAB_SAPLING = PlacementUtils.register("regions_unexplored:tall_baobab_sapling", RuVegetationFeatures.TALL_BAOBAB_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BIRCH_SAPLING = PlacementUtils.register("regions_unexplored:tall_birch_sapling", RuVegetationFeatures.TALL_BIRCH_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BLACKWOOD_SAPLING = PlacementUtils.register("regions_unexplored:tall_blackwood_sapling", RuVegetationFeatures.TALL_BLACKWOOD_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_CHERRY_SAPLING = PlacementUtils.register("regions_unexplored:tall_cherry_sapling", RuVegetationFeatures.TALL_CHERRY_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_RED_CHERRY_SAPLING = PlacementUtils.register("regions_unexplored:tall_red_cherry_sapling", RuVegetationFeatures.TALL_RED_CHERRY_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_PINK_CHERRY_SAPLING = PlacementUtils.register("regions_unexplored:tall_pink_cherry_sapling", RuVegetationFeatures.TALL_PINK_CHERRY_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_WHITE_CHERRY_SAPLING = PlacementUtils.register("regions_unexplored:tall_white_cherry_sapling", RuVegetationFeatures.TALL_WHITE_CHERRY_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_CYPRESS_SAPLING = PlacementUtils.register("regions_unexplored:tall_cypress_sapling", RuVegetationFeatures.TALL_CYPRESS_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_DARK_OAK_SAPLING = PlacementUtils.register("regions_unexplored:tall_dark_oak_sapling", RuVegetationFeatures.TALL_DARK_OAK_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_DEAD_SAPLING = PlacementUtils.register("regions_unexplored:tall_dead_sapling", RuVegetationFeatures.TALL_DEAD_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_DEAD_PINE_SAPLING = PlacementUtils.register("regions_unexplored:tall_dead_pine_sapling", RuVegetationFeatures.TALL_DEAD_PINE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_EUCALYPTUS_SAPLING = PlacementUtils.register("regions_unexplored:tall_eucalyptus_sapling", RuVegetationFeatures.TALL_EUCALYPTUS_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_FLOWERING_SAPLING = PlacementUtils.register("regions_unexplored:tall_flowering_sapling", RuVegetationFeatures.TALL_FLOWERING_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_JOSHUA_SAPLING = PlacementUtils.register("regions_unexplored:tall_joshua_sapling", RuVegetationFeatures.TALL_JOSHUA_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_JUNGLE_SAPLING = PlacementUtils.register("regions_unexplored:tall_jungle_sapling", RuVegetationFeatures.TALL_JUNGLE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_LARCH_SAPLING = PlacementUtils.register("regions_unexplored:tall_larch_sapling", RuVegetationFeatures.TALL_LARCH_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_GOLDEN_LARCH_SAPLING = PlacementUtils.register("regions_unexplored:tall_golden_larch_sapling", RuVegetationFeatures.TALL_GOLDEN_LARCH_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_MAPLE_SAPLING = PlacementUtils.register("regions_unexplored:tall_maple_sapling", RuVegetationFeatures.TALL_MAPLE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_RED_MAPLE_SAPLING = PlacementUtils.register("regions_unexplored:tall_red_maple_sapling", RuVegetationFeatures.TALL_RED_MAPLE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_ORANGE_MAPLE_SAPLING = PlacementUtils.register("regions_unexplored:tall_orange_maple_sapling", RuVegetationFeatures.TALL_ORANGE_MAPLE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_MAUVE_SAPLING = PlacementUtils.register("regions_unexplored:tall_mauve_sapling", RuVegetationFeatures.TALL_MAUVE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_OAK_SAPLING = PlacementUtils.register("regions_unexplored:tall_oak_sapling", RuVegetationFeatures.TALL_OAK_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_PALM_SAPLING = PlacementUtils.register("regions_unexplored:tall_palm_sapling", RuVegetationFeatures.TALL_PALM_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_PINE_SAPLING = PlacementUtils.register("regions_unexplored:tall_pine_sapling", RuVegetationFeatures.TALL_PINE_SAPLING, CountPlacement.of(2), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_REDWOOD_SAPLING = PlacementUtils.register("regions_unexplored:tall_redwood_sapling", RuVegetationFeatures.TALL_REDWOOD_SAPLING, CountPlacement.of(2), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_SILVER_BIRCH_SAPLING = PlacementUtils.register("regions_unexplored:tall_silver_birch_sapling", RuVegetationFeatures.TALL_SILVER_BIRCH_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_SPRUCE_SAPLING = PlacementUtils.register("regions_unexplored:tall_spruce_sapling", RuVegetationFeatures.TALL_SPRUCE_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_WILLOW_SAPLING = PlacementUtils.register("regions_unexplored:tall_willow_sapling", RuVegetationFeatures.TALL_WILLOW_SAPLING, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    //mixes//mixes
    public static final Holder<PlacedFeature> TALL_AUTUMNAL_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_autumnal_sapling_mix", RuVegetationFeatures.TALL_AUTUMNAL_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BIRCH_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_birch_sapling_mix", RuVegetationFeatures.TALL_BIRCH_SAPLING_MIX, CountPlacement.of(2), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BLACKWOOD_DARK_OAK_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_blackwood_dark_oak_sapling_mix", RuVegetationFeatures.TALL_BLACKWOOD_DARK_OAK_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_CHERRY_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_cherry_sapling_mix", RuVegetationFeatures.TALL_CHERRY_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_DEAD_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_dead_sapling_mix", RuVegetationFeatures.TALL_DEAD_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_LARCH_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_larch_sapling_mix", RuVegetationFeatures.TALL_LARCH_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_GOLDEN_LARCH_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_golden_larch_sapling_mix", RuVegetationFeatures.TALL_GOLDEN_LARCH_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_MAPLE_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_maple_sapling_mix", RuVegetationFeatures.TALL_MAPLE_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_PINE_SPRUCE_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_pine_spruce_sapling_mix", RuVegetationFeatures.TALL_PINE_SPRUCE_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_PINE_DEAD_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_pine_dead_sapling_mix", RuVegetationFeatures.TALL_PINE_SPRUCE_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_WILLOW_CYPRESS_SAPLING_MIX = PlacementUtils.register("regions_unexplored:tall_willow_cypress_sapling_mix", RuVegetationFeatures.TALL_WILLOW_CYPRESS_SAPLING_MIX, CountPlacement.of(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());

    public static final Holder<PlacedFeature> FOREST_BAMBOO = PlacementUtils.register("regions_unexplored:forest_bamboo", VegetationFeatures.BAMBOO_SOME_PODZOL, NoiseBasedCountPlacement.of(30, -0.8D, 2.0D), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome());
    public static final Holder<PlacedFeature> SEAGRASS = PlacementUtils.register("regions_unexplored:seagrass", RuVegetationFeatures.PATCH_SEAGRASS, seagrassPlacement(64));
    public static final Holder<PlacedFeature> PATCH_CACTUS_OUTBACK = PlacementUtils.register("regions_unexplored:patch_cactus_outback", VegetationFeatures.PATCH_CACTUS, RarityFilter.onAverageOnceEvery(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP, BiomeFilter.biome());
    public static final Holder<PlacedFeature> RU_BAMBOO = PlacementUtils.register("regions_unexplored:ru_bamboo", VegetationFeatures.BAMBOO_SOME_PODZOL, NoiseBasedCountPlacement.of(30, -0.8D, 2.0D), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome());
    //Grass
    public static final Holder<PlacedFeature> PATCH_GRASS_3 = PlacementUtils.register("regions_unexplored:patch_grass_3", VegetationFeatures.PATCH_GRASS, NoiseThresholdCountPlacement.of(-0.8D, 5, 3), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome());
    public static final Holder<PlacedFeature> PATCH_MEDIUM_GRASS = PlacementUtils.register("regions_unexplored:medium_grass_placed", RuVegetationFeatures.PATCH_MEDIUM_GRASS, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 7), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_SEEDED_GRASSES = PlacementUtils.register("regions_unexplored:patch_seeded_grasses", RuVegetationFeatures.SEEDED_GRASS_MIX, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 9), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_FOREST_FERNS = PlacementUtils.register("regions_unexplored:patch_forest_ferns", RuVegetationFeatures.PATCH_FOREST_FERN, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 7), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(RegionsUnexploredBlocks.DIRT_PLACEMENT.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_TALL_FOREST_FERNS = PlacementUtils.register("regions_unexplored:patch_tall_forest_ferns", RuVegetationFeatures.PATCH_TALL_FOREST_FERN, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 2), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, PlacementUtils.filteredByBlockSurvival(RegionsUnexploredBlocks.DIRT_PLACEMENT.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GRASSLAND_STEPPE_GRASS = PlacementUtils.register("regions_unexplored:grassland_steppe_grass", RuVegetationFeatures.PATCH_TALL_STEPPE_GRASS, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 7), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_REDSTONE_BUD = PlacementUtils.register("regions_unexplored:redstone_bud_placed", RuVegetationFeatures.PATCH_REDSTONE_BUD, List.of(CountPlacement.of(255), InSquarePlacement.spread(), PlacementUtils.RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_REDSTONE_BULB = PlacementUtils.register("regions_unexplored:redstone_bulb_placed", RuVegetationFeatures.PATCH_REDSTONE_BULB, List.of(CountPlacement.of(64), InSquarePlacement.spread(), PlacementUtils.RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT, BiomeFilter.biome()));
    //Flowers
    public static final Holder<PlacedFeature> RU_DEFAULT_FLOWERS = PlacementUtils.register("regions_unexplored:ru_default_flowers", RuVegetationFeatures.RU_FLOWER_DEFAULT, RarityFilter.onAverageOnceEvery(8), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP, BiomeFilter.biome());
    public static final Holder<PlacedFeature> RU_PINK_FLOWERS = PlacementUtils.register("regions_unexplored:ru_pink_flowers", RuVegetationFeatures.RU_FLOWER_PINK, RarityFilter.onAverageOnceEvery(1), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP, BiomeFilter.biome());
    public static final Holder<PlacedFeature> RU_LILACS = PlacementUtils.register("regions_unexplored:ru_lilacs", RuVegetationFeatures.RU_LILAC, RarityFilter.onAverageOnceEvery(4), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP, BiomeFilter.biome());
    public static final Holder<PlacedFeature> ALPHA_ROSE_BONEMEAL = PlacementUtils.register("regions_unexplored:alpha_rose_bonemeal", RuVegetationFeatures.ALPHA_ROSE, PlacementUtils.isEmpty());
    public static final Holder<PlacedFeature> ALPHA_DANDELION_BONEMEAL = PlacementUtils.register("regions_unexplored:alpha_dandelion_bonemeal", RuVegetationFeatures.ALPHA_DANDELION, PlacementUtils.isEmpty());
    public static final Holder<PlacedFeature> HYSSOP_MEADOW = PlacementUtils.register("regions_unexplored:hyssop_meadow", RuVegetationFeatures.PATCH_HYSSOP, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 4), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> DAISY_MEADOW = PlacementUtils.register("regions_unexplored:daisy_meadow", RuVegetationFeatures.PATCH_DAISY, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 4), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> FIREWEED_MEADOW = PlacementUtils.register("regions_unexplored:fireweed_meadow", RuVegetationFeatures.PATCH_FIREWEED, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 4), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PATCH_DAISIES = PlacementUtils.register("regions_unexplored:patch_daisies", RuVegetationFeatures.DAISY_MIX, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 9), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome()));
    //Trees
    public static final Holder<PlacedFeature> PALM_TROPICS = PlacementUtils.register("regions_unexplored:palm_rainforest", RuTreeFeatures.PALM_TREE, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    //Other
    public static final Holder<PlacedFeature> PATCH_DUCKWEED = PlacementUtils.register("regions_unexplored:patch_duckweed", RuVegetationFeatures.DUCKWEED, worldSurfaceSquaredWithCount(32));
    public static final Holder<PlacedFeature> PATCH_DUCKWEED_SPARSE = PlacementUtils.register("regions_unexplored:patch_duckweed_sparse", RuVegetationFeatures.DUCKWEED, worldSurfaceSquaredWithCount(16));
    public static final Holder<PlacedFeature> PATCH_LILY_SPARSE = PlacementUtils.register("regions_unexplored:patch_lily_sparse", RuVegetationFeatures.PATCH_LILY_PAD, worldSurfaceSquaredWithCount(6));

    public static final Holder<PlacedFeature> CATTAIL_VANILLA = PlacementUtils.register("regions_unexplored:cattail_vanilla", RuVegetationFeatures.PATCH_CATTAIL, List.of(RarityFilter.onAverageOnceEvery(3), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, RuVegetationFeatures.WATERSIDE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> CATTAIL_RIVER = PlacementUtils.register("regions_unexplored:cattail_river", RuVegetationFeatures.PATCH_CATTAIL, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 48), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, RuVegetationFeatures.WATERSIDE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> CATTAIL_14 = PlacementUtils.register("regions_unexplored:cattail_14", RuVegetationFeatures.PATCH_CATTAIL, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 14), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, RuVegetationFeatures.WATERSIDE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> CATTAIL_30 = PlacementUtils.register("regions_unexplored:cattail_30", RuVegetationFeatures.PATCH_CATTAIL, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 30), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, RuVegetationFeatures.WATERSIDE, BiomeFilter.biome()));
    public static final Holder<PlacedFeature> CATTAIL_BAYOU = PlacementUtils.register("regions_unexplored:cattail_bayou", RuVegetationFeatures.PATCH_CATTAIL, List.of(NoiseThresholdCountPlacement.of(-0.8D, 5, 14), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, RuVegetationFeatures.WATERSIDE, PlacementUtils.filteredByBlockSurvival(RegionsUnexploredBlocks.MUD_PLACEMENT.get()), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> OVERGROWN_VINES = PlacementUtils.register("regions_unexplored:overgrown_vines", RuVegetationFeatures.OVERGROWN_VINE, CountPlacement.of(200), InSquarePlacement.spread(), PlacementUtils.RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT, EnvironmentScanPlacement.scanningFor(Direction.UP, BlockPredicate.hasSturdyFace(Direction.DOWN), BlockPredicate.ONLY_IN_AIR_PREDICATE, 12), RandomOffsetPlacement.vertical(ConstantInt.of(-1)), BiomeFilter.biome());

    public static final Holder<PlacedFeature> SCULK_WILLOW = PlacementUtils.register("regions_unexplored:sculk_willow", RuVegetationFeatures.SCULK_WILLOW, CountOnEveryLayerPlacement.of(2),  BiomeFilter.biome());
    public static final Holder<PlacedFeature> GIANT_SCULK_WILLOW = PlacementUtils.register("regions_unexplored:giant_sculk_willow", RuVegetationFeatures.GIANT_SCULK_WILLOW, CountOnEveryLayerPlacement.of(2),  BiomeFilter.biome());

    public static List<PlacementModifier> worldSurfaceSquaredWithCount(int count) {
        return List.of(CountPlacement.of(count), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome());
    }

    private static List<PlacementModifier> seagrassPlacement(int count) {
        return List.of(InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_TOP_SOLID, CountPlacement.of(count), BiomeFilter.biome());
    }
}